/* 
 * File:   main.c
 * Author: local
 *
 * Created on March 31, 2025, 8:17 AM
 */

// CONFIG2
#pragma config POSCMOD = NONE           // Primary Oscillator Select (Primary oscillator disabled)
#pragma config OSCIOFNC = OFF           // Primary Oscillator Output Function (OSC2/CLKO/RC15 functions as CLKO (FOSC/2))
#pragma config FCKSM = CSDCMD           // Clock Switching and Monitor (Clock switching and Fail-Safe Clock Monitor are disabled)
#pragma config FNOSC = FRCDIV           // Oscillator Select (Fast RC Oscillator with Postscaler (FRCDIV))
#pragma config IESO = ON                // Internal External Switch Over Mode (IESO mode (Two-Speed Start-up) enabled)

// CONFIG1
#pragma config WDTPS = PS32768          // Watchdog Timer Postscaler (1:32,768)
#pragma config FWPSA = PR128            // WDT Prescaler (Prescaler ratio of 1:128)
#pragma config WINDIS = ON              // Watchdog Timer Window (Standard Watchdog Timer enabled,(Windowed-mode is disabled))
#pragma config FWDTEN = ON              // Watchdog Timer Enable (Watchdog Timer is enabled)
#pragma config ICS = PGx2               // Comm Channel Select (Emulator/debugger uses EMUC2/EMUD2)
#pragma config GWRP = OFF               // General Code Segment Write Protect (Writes to program memory are allowed)
#pragma config GCP = OFF                // General Code Segment Code Protect (Code protection is disabled)
#pragma config JTAGEN = OFF             // JTAG Port Enable (JTAG port is disabled)


#include <xc.h>
#include <p24FJ128GA010.h>
#include <libpic30.h>

/*
 * 
 */

int main(int argc, char** argv) {

    TRISA = 0;
    LATA = 0;
    TRISDbits.TRISD6 = 1;
    TRISDbits.TRISD13 = 1;
    int s3_prev =1;
    int s4_prev =1;
    int btn = 0;
    while(1)
    {
        if(PORTDbits.RD6 != 1)
        {
            btn += 1;
            if(btn>8)
            {
                btn = 0;
            }
            
            if(btn==6)
            {
                LATA = 7;
            }
            else
            {
                LATA = 0;
            }
            __delay32(500000);
        }
        
        if(PORTDbits.RD13 != 1)
        {
             btn -= 1;
            if(btn<0)
            {
                btn = 8;
            }
             
            if(btn==6)
            {
                LATA = 7;
            }
            else
            {
                LATA = 0;
            }
            __delay32(500000);
        }
        
        if(btn==0)
        {
            LATA = LATA + 1;
            __delay32(500000);
            if(LATA == 0xFFFF)
            {
                LATA = 0;
                __delay32(500000);
            }
        }
        else if(btn==1)
        {
            LATA = LATA - 1;
            __delay32(500000);
            if(LATA == 0)
            {
                LATA = 0xFFFF;
                __delay32(500000);
            }
        }
        else if(btn==2)
        {
            LATA = 2;
        }
        else if(btn==3)
        {
            LATA = 3;
        }
        else if(btn==4)
        {
            LATA = 4;
        }
        else if(btn==5)
        {
            LATA = 0;
            int a = 1;
             __delay32(500000);
            for(int i = 0; i<89;i++)
            {
                LATA=LATA+1;
                a=a+1;
                 __delay32(500000);
                 if(a==10)
                 {
                     LATA=LATA-9;
                     LATA=LATA+16;
                     a=1;
                 }
            }
              __delay32(500000);
        }
        else if(btn==6)
        {
            LATA = LATA*2;
            __delay32(500000);
            if(LATA==224)
            {
                for(int i = 0; i < 5; i++)
                {
                    LATA = LATA/2;
                    __delay32(500000);
                }
            }
        }
        else if(btn==7)
        {
            LATA = 1;
            __delay32(500000);
            for(int i = 0; i<7; i++)
            {
                LATA = LATA*2;
                __delay32(500000);
            }
            
            int a = 1;
            
            for(int i = 0; i<7; i++)
            {
                
                LATA = LATA+a;
                __delay32(500000);
                LATA = LATA-a;
                a=a*2;
            }
            a=a/2;
            LATA = LATA+a;
            a = 1;
            __delay32(500000);
            
            for(int i = 0; i<6; i++)
            {
                
                LATA = LATA+a;
                __delay32(500000);
                LATA = LATA-a;
                a=a*2;
            }
            a=a/2;
            LATA = LATA+a;
            a = 1;
            __delay32(500000);
            
            for(int i = 0; i<5; i++)
            {
                
                LATA = LATA+a;
                __delay32(500000);
                LATA = LATA-a;
                a=a*2;
            }
            a=a/2;
            LATA = LATA+a;
            a = 1;
            __delay32(500000);
            
            for(int i = 0; i<4; i++)
            {
                
                LATA = LATA+a;
                __delay32(500000);
                LATA = LATA-a;
                a=a*2;
            }
            a=a/2;
            LATA = LATA+a;
            a = 1;
            __delay32(500000);
            
            for(int i = 0; i<3; i++)
            {
                
                LATA = LATA+a;
                __delay32(500000);
                LATA = LATA-a;
                a=a*2;
            }
            a=a/2;
            LATA = LATA+a;
            a = 1;
            __delay32(500000);
            
            for(int i = 0; i<2; i++)
            {
                
                LATA = LATA+a;
                __delay32(500000);
                LATA = LATA-a;
                a=a*2;
            }
            a=a/2;
            LATA = LATA+a;
            a = 1;
            __delay32(500000);
            
            LATA=LATA+1;
             __delay32(500000);
             
        }
        else if(btn==8)
        {
            LATA = 8;
        }
        
    }
}
